""" Introduction {{{
""" Please read carefully
"""
""" A .vimrc is something extremely personal. There is no 'well-written' .vimrc.
""" There are only well-written ones for a particular person.
""" The aim of this .vimrc is not primarily to be used as-is, but instead to
""" provide you with a good starting point for documenting yourself about vim.
""" Let me emphasize the implications of the previous sentence: You MUST read
""" this file line-by-line, and type in `:help <keyword>` for each of them, and
""" learn from the documentation what it does.
""" These settings are good settings for beginner to intermediate vimmers, so
""" stick with them until you're confident in your usage with vim.
"""
""" Getting confident
""" -----------------
""" Vim is not your usual text editor, it's extremely powerful. But for this
""" power to be unleashed to you, you have to invest some time in it, depending
""" on your already existing vim skills.
""" You should first be able to touch type properly. If you're looking at the
""" keyboard to locate the symbol you want to type, then you're not ready for
""" being an average vimmer. Look on the web for 'touch typing for programmers'.
"""
""" The next step consists of getting fluent at using the most common features:
""" text-objects, cursor-motions, folds, marks, buffers, windows.
""" Just type in `:help ` along with one of the keywords above, and read the
""" help throughly.
"""
""" While you're doing this reading on a daily basis, for a few weeks, start
""" to observ inefficiencies in your editing habits, and try to find shortcuts
""" for them. Usually, there are more ways of doing the same thing, but there
""" are a few which may lead to less finger movement.
""" A good way of finding shortcuts to such inefficiencies is to hang on IRC,
""" on the #vim channel on freenode. You can learn a lot even by listening to
""" other people's problems, or you can ask yourself.
"""
""" Whatever you do, until you are (very) good at the features mentioned above,
""" DO NOT alter this .vimrc. Stick with it for a while, DO NOT install scripts,
""" plugins, bundles, or whatever.
""" Usually, this takes at least 2 months, if done properly, consciously, at
""" least 60 minutes a day.
"""
""" Once you're there, I would say you're at an intermediate level. Feel free
""" to follow the steps in the 'Bundles' section below.
"""
""" Happy vimming!
""" }}}
" Environment {{{
    set nocompatible
    scriptencoding utf-8
    set termencoding=utf-8
    set encoding=utf-8
    set autochdir
    set shell=/bin/zsh
    " Directories {
        silent execute '!mkdir -p $HOME/.vim/tmp/{backup,swap,view,undo}'
        set backupdir=$HOME/.vim/tmp/backup/
        set backup
        set directory=$HOME/.vim/tmp/swap/
        set viewdir=$HOME/.vim/tmp/view/
        set undodir=$HOME/.vim/tmp/undo/
        " store undo files, undo edits after deleting a buffer
        set undofile
        set viminfo='50,n$HOME/.vim/tmp/viminfo
    " }
    " For a more responsive TrapMovementKeys (see below) - learn proper vim
    " Also for Bundle vim-showmarks
    set updatetime=1000
" }}}
" Bundles {{{
    " TODO:
    " 1. clone vundle into ~/.vim/bundle/vundle
    " 2. add here: filetype off
    " 3. add here: set rtp+=~/.vim/bundle/vundle/
    " 4. add here: call vundle#rc()
    " 5. add here: Bundle 'gmarik/vundle'
    " 6. add here further bundles and a little documentation above each
    "    Bundle instruction, so you can remember what each bundle is for
    " 7. add here: Helptags
    " 8. add here: filetype plugin indent on
    " 9. In each section below, add corresponding customizations as required
    "    for that bundle, pinpointing each time which bundle the
    "    configuration belongs to.
    "    For instance, the 'janson/bufonly.vim' bundle could deserve an entry
    "    in the 'Maps' section further down below for the :BufOnly command.
    "    Other bundles could need different configurations spread throughout
    "    different sections.
    "    The most important thing here is to document your vimrc. One may
    "    be unused to this, but since vim is such a powerful editor ...
    "    WITH GREAT POWER COMES GREAT RESPONSIBILITY
    "
    " Final note: do not rush into Bundles, try to use vim for at least 1-2
    "   months, observing repetitive actions in your editing behavior, while fixing
    "   your muscle memory. For instance, right after `vimtutor` you might
    "   continuously press j to navigate downwards. That's a repetitive action,
    "   you could use 20j to go 20 lines below, or other movements.
    "   See `:help cursor-motions` for a complete list. It's difficult and
    "   frustrating at first, but it will unleash the full power of vim.
    "   Oh, and learn touch typing. If you're coding, there is
    "   http://typing.io/.
    "
    "   YOU HAVE TO GROW ALONG YOUR .vimrc, AT A PROPORTIONAL PACE. A .vimrc
    "   IS SOMETHING VERY PERSONAL AND SHOULD REFLECT YOUR SKILLS.
" }}}
" Editing {{{
    set tabstop=8
    set shiftwidth=4
    set softtabstop=4
    set expandtab
    set autoindent
    set fileencodings=utf-8
    set nojoinspaces
" }}}
" Visuals {{{
    set visualbell
    set title
    syntax on
    set relativenumber
    set modeline
    set showmode
    set showcmd
    set showmatch
    set incsearch
    set hlsearch
    set wildmenu
    set wildmode=list:longest,full
    set list
    set listchars=tab:▸\ ,eol:¬,extends:»,precedes:«
    set showbreak=↪
    set ttyfast
    set lazyredraw
    set ruler
    set textwidth=79
    set wrapmargin=80
    set formatoptions=qrn1
    set colorcolumn=80
    set splitright splitbelow
    set shortmess+=afilmnrxoOtT
    set viewoptions=folds,options,cursor,unix,slash
    " Coloring {
        colors elflord
        highlight Folded term=standout ctermfg=0 ctermbg=7 guifg=Black guibg=ivory3
        highlight WhitespaceEOL ctermbg=Red guibg=Red
        match WhitespaceEOL /\s\+$/
    " }
    " Diff {
        set diffopt+=iwhite,vertical
    " }
    " GUI {
        if has('gui_running')
            set guioptions-=T " no toolbars
            set guioptions+=LlRrb guioptions-=LlRrb " no scrollbars
        endif
    " }

" }}}
" Maps {{{
    " Use <Leader> in maps, so it's easier to share them, yet still allow
    " anyone to use them in their own, personalized way. Remember, not all
    " keyboards have US layout.
    "
    " Always use the non-recursive map commands (nore)
    let mapleader=','
    " Use <LocalLeader> for maps which (logistically) map to operations on
    " the local buffer only.
    let maplocaleader='\\'

    " Force yourself to learn proper vim {
        nnoremap <UP> <NOP>
        nnoremap <DOWN> <NOP>
        nnoremap <LEFT> <NOP>
        nnoremap <RIGHT> <NOP>
        inoremap <UP> <NOP>
        inoremap <DOWN> <NOP>
        inoremap <LEFT> <NOP>
        inoremap <RIGHT> <NOP>
        vnoremap <UP> <NOP>
        vnoremap <DOWN> <NOP>
        vnoremap <LEFT> <NOP>
        vnoremap <RIGHT> <NOP>
        " No repetitive HJKL {
            " Author: Barry Arthur <bairui @ #vim / freenode>
            let g:cursor_moving = 0

            function! TrapMovementKeys(key)
                augroup CursorMoving
                    au!
                    autocmd CursorMoved * let g:cursor_moving = 1
                augroup END
                if ! g:cursor_moving
                    return a:key
                else
                    return ''
                endif
            endfunction

            nnoremap <expr> h TrapMovementKeys('h')
            nnoremap <expr> j TrapMovementKeys('j')
            nnoremap <expr> k TrapMovementKeys('k')
            nnoremap <expr> l TrapMovementKeys('l')

            augroup CursorMovingOff
                au!
                autocmd CursorHold * let g:cursor_moving = 0
            augroup END
        " }
    " }
" }}}
" vim:set foldmarker={{{,}}} foldlevel=0 foldmethod=marker:
